{"ast":null,"code":"export function random(min, max, decimal) {\n  return Number((Math.random() * (max - min + 1) + min).toFixed(decimal));\n}\nexport function generateRankingPlayers() {\n  let playersGuess = [];\n  for (let i = 0; i < 5; i++) {\n    let data = {\n      id: i,\n      name: i === 0 ? \"You\" : `CPU ${i}`,\n      point: \"-\",\n      multiplier: \"-\",\n      score: 0\n    };\n    playersGuess.push(data);\n  }\n  return playersGuess;\n}\nexport function generateGuessPlayers(pointsValue, multiplierValue) {\n  let players = [];\n  const data = {\n    id: 0,\n    name: \"You\",\n    point: pointsValue,\n    multiplier: multiplierValue,\n    score: Math.round(pointsValue * multiplierValue)\n  };\n  players.push(data);\n  for (let i = 0; i < 4; i++) {\n    let p = random(1, 700, 0),\n      m = random(1, 4, 2);\n    players.push({\n      id: i + 1,\n      name: `CPU ${i + 1}`,\n      point: p,\n      multiplier: m,\n      score: Math.round(p * m)\n    });\n  }\n  return players;\n}","map":{"version":3,"names":["random","min","max","decimal","Number","Math","toFixed","generateRankingPlayers","playersGuess","i","data","id","name","point","multiplier","score","push","generateGuessPlayers","pointsValue","multiplierValue","players","round","p","m"],"sources":["/Users/nabil/Desktop/untitled folder 2/splash-task/frontend/src/utils/utils.ts"],"sourcesContent":["\n\nexport function random(min: number, max: number, decimal: number) {\n    return Number((Math.random() * (max - min + 1) + min).toFixed(decimal));\n}\n\nexport interface players {\n    id: number;\n    name: string;\n    point: any;\n    multiplier: any;\n    score: number;\n}\n\nexport function generateRankingPlayers() {\n    let playersGuess: any = [];\n\n    for (let i = 0; i < 5; i++) {\n      let data: players = {\n        id: i,\n        name: i === 0 ? \"You\" : `CPU ${i}`,\n        point: \"-\",\n        multiplier: \"-\",\n        score: 0,\n      };\n      playersGuess.push(data);\n    }\n    return playersGuess\n}\n\nexport function generateGuessPlayers(pointsValue,multiplierValue) {\n    let players: any = [];\n    const data: players = {\n      id: 0,\n      name: \"You\",\n      point: pointsValue,\n      multiplier: multiplierValue,\n      score: Math.round(pointsValue * multiplierValue),\n    };\n\n    players.push(data);\n\n    for (let i = 0; i < 4; i++) {\n      let p: number = random(1, 700, 0),\n        m: number = random(1, 4, 2);\n\n      players.push({\n        id: i + 1,\n        name: `CPU ${i + 1}`,\n        point: p,\n        multiplier: m,\n        score: Math.round(p * m),\n      });\n    }\n    return players;\n}"],"mappings":"AAEA,OAAO,SAASA,MAAMA,CAACC,GAAW,EAAEC,GAAW,EAAEC,OAAe,EAAE;EAC9D,OAAOC,MAAM,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC,CAAC,IAAIE,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,GAAGA,GAAG,EAAEK,OAAO,CAACH,OAAO,CAAC,CAAC;AAC3E;AAUA,OAAO,SAASI,sBAAsBA,CAAA,EAAG;EACrC,IAAIC,YAAiB,GAAG,EAAE;EAE1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIC,IAAa,GAAG;MAClBC,EAAE,EAAEF,CAAC;MACLG,IAAI,EAAEH,CAAC,KAAK,CAAC,GAAG,KAAK,GAAI,OAAMA,CAAE,EAAC;MAClCI,KAAK,EAAE,GAAG;MACVC,UAAU,EAAE,GAAG;MACfC,KAAK,EAAE;IACT,CAAC;IACDP,YAAY,CAACQ,IAAI,CAACN,IAAI,CAAC;EACzB;EACA,OAAOF,YAAY;AACvB;AAEA,OAAO,SAASS,oBAAoBA,CAACC,WAAW,EAACC,eAAe,EAAE;EAC9D,IAAIC,OAAY,GAAG,EAAE;EACrB,MAAMV,IAAa,GAAG;IACpBC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAEK,WAAW;IAClBJ,UAAU,EAAEK,eAAe;IAC3BJ,KAAK,EAAEV,IAAI,CAACgB,KAAK,CAACH,WAAW,GAAGC,eAAe;EACjD,CAAC;EAEDC,OAAO,CAACJ,IAAI,CAACN,IAAI,CAAC;EAElB,KAAK,IAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIa,CAAS,GAAGtB,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC/BuB,CAAS,GAAGvB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE7BoB,OAAO,CAACJ,IAAI,CAAC;MACXL,EAAE,EAAEF,CAAC,GAAG,CAAC;MACTG,IAAI,EAAG,OAAMH,CAAC,GAAG,CAAE,EAAC;MACpBI,KAAK,EAAES,CAAC;MACRR,UAAU,EAAES,CAAC;MACbR,KAAK,EAAEV,IAAI,CAACgB,KAAK,CAACC,CAAC,GAAGC,CAAC;IACzB,CAAC,CAAC;EACJ;EACA,OAAOH,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}